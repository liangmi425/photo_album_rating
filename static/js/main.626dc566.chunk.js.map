{"version":3,"sources":["components/ImageLightbox/constant.js","components/ImageLightbox/react-image-lightbox.js","components/Photo.js","components/PhotoListItem.js","components/Header.js","components/ImageLightbox/index.js","App.js","serviceWorker.js","index.js","components/ImageLightbox/util.js"],"names":["MIN_ZOOM_LEVEL","MAX_ZOOM_LEVEL","ZOOM_RATIO","ZOOM_BUTTON_INCREMENT_SIZE","WHEEL_MOVE_X_THRESHOLD","WHEEL_MOVE_Y_THRESHOLD","KEYS","ESC","LEFT_ARROW","RIGHT_ARROW","ACTION_NONE","ACTION_MOVE","ACTION_SWIPE","ACTION_PINCH","SOURCE_ANY","SOURCE_MOUSE","SOURCE_TOUCH","SOURCE_POINTER","MIN_SWIPE_DISTANCE","ReactImageLightbox","props","state","isClosing","animationDisabled","shouldAnimate","zoomLevel","offsetX","offsetY","loadErrorStatus","outerEl","React","createRef","zoomInBtn","zoomOutBtn","caption","closeIfClickInner","bind","handleImageDoubleClick","handleImageMouseWheel","handleKeyInput","handleMouseUp","handleMouseDown","handleMouseMove","handleOuterMousewheel","handleTouchStart","handleTouchMove","handleTouchEnd","handlePointerEvent","handleCaptionMousewheel","handleWindowResize","handleZoomInButtonClick","handleZoomOutButtonClick","requestClose","requestMoveNext","requestMovePrev","target","test","className","mouseEvent","id","source","x","parseInt","clientX","y","clientY","touchPointer","identifier","pointerEvent","pointerId","zoom","width","targetWidth","nextX","windowWidth","getWindowWidth","scaleFactor","transform","this","timeouts","currentAction","eventsSource","pointerList","preventInnerClose","preventInnerCloseTimeout","keyPressed","imageCache","lastKeyDownTime","resizeTimeout","wheelActionTimeout","resetScrollTimeout","scrollX","scrollY","moveStartX","moveStartY","moveStartOffsetX","moveStartOffsetY","swipeStartX","swipeStartY","swipeEndX","swipeEndY","pinchTouchList","pinchDistance","keyCounter","moveRequested","setState","windowContext","getHighestSafeWindowContext","listeners","resize","mouseup","touchend","touchcancel","pointerdown","pointermove","pointerup","pointercancel","Object","keys","forEach","type","addEventListener","loadAllImages","nextProps","sourcesChanged","prevSrcDict","nextSrcDict","getSrcTypes","srcType","name","prevSrc","loaded","didUnmount","removeEventListener","tid","clearTimeout","func","time","setTimeout","filter","push","imageSrc","fitSizes","isImageLoaded","getFitSizes","height","src","targetHeight","stretch","boxSize","getLightboxRect","maxHeight","imagePadding","maxWidth","Math","min","currentImageInfo","getBestImageForType","maxX","minX","maxY","minY","zoomMultiplier","getZoomMultiplier","keyEnding","current","getBoundingClientRect","getWindowHeight","top","right","bottom","left","enableZoom","nextZoomLevel","max","imageBaseSize","currentZoomMultiplier","nextZoomMultiplier","boxRect","pointerX","pointerY","currentImageOffsetX","currentImageOffsetY","nextImageRealOffsetX","nextImageRealOffsetY","nextOffsetX","nextOffsetY","maxOffsets","getMaxOffsets","event","search","stopPropagation","isAnimating","keyCode","which","currentTime","Date","getTime","keyRepeatLimit","preventDefault","nextSrc","keyRepeatKeyupBonus","xThreshold","actionDelay","abs","deltaY","deltaX","bigLeapX","yThreshold","changeZoom","filterPointersBySource","pointer","shouldHandleEvent","isTargetMatchImage","addPointer","parseMouseEvent","multiPointerStart","multiPointerMove","removePointer","multiPointerEnd","parsePointerEvent","call","changedTouches","eventTouch","parseTouchPointer","map","touch","handleSwipeStart","handleMoveStart","handleEnd","length","decideMoveOrSwipe","handlePinchStart","handleMove","handleSwipe","handlePinch","setPreventInnerClose","handleMoveEnd","handleSwipeEnd","handlePinchEnd","newOffsetX","newOffsetY","animationDuration","xDiff","xDiffAbs","yDiffAbs","a","b","sqrt","calculatePinchDistance","oldPointer","i","newDistance","calculatePinchCenter","forceUpdate","focus","scrollHeight","scrollTop","done","inMemoryImage","global","Image","imageCrossOrigin","crossOrigin","onerror","errorEvent","onImageLoadError","prevState","onload","onImageLoad","generateLoadDoneCallback","err","loadImage","closeLightbox","onCloseRequest","animationOnKeyInput","direction","nextState","onMovePrevRequest","onMoveNextRequest","requestMove","clickOutsideToClose","discourageDownloads","imageTitle","toolbarButtons","reactModalStyle","onAfterOpen","reactModalProps","transitionStyle","transition","keyEndings","images","addImage","imageClass","transforms","bestImageInfo","imageStyle","getTransform","cursor","object","some","key","style","imageLoadErrorMessage","backgroundImage","onDoubleClick","onWheel","onDragStart","e","alt","translate","draggable","loadingIcon","Array","_","index","modalStyle","overlay","zIndex","backgroundColor","content","overflow","border","borderRadius","padding","isOpen","onRequestClose","undefined","contentLabel","appElement","window","document","body","wrapperClassName","animationDirection","ref","onMouseMove","onMouseDown","onTouchStart","onTouchMove","tabIndex","onKeyDown","onKeyUp","onClick","aria-label","prevLabel","nextLabel","button","zoomInLabel","join","disabled","zoomOutLabel","closeLabel","imageCaption","onRateClick","Component","defaultProps","mainSrcThumbnail","nextSrcThumbnail","prevSrcThumbnail","data-category","category","imageUrl","title","description","slice","href","data-toggle","data-target","aria-controls","aria-expanded","Lightbox","PHOTODATA","thumbnail","toggleActive","active","selectCategory","element","categoryName","toLowerCase","displayedCategories","el","indexOf","resetFilter","openLightBox","photoIndex","handleListViewChecked","isListView","ratePhoto","rate","JSON","parse","stringify","self","categoryToSelect","getUniqueCategories","Header","role","boundClick","onChange","htmlFor","mainSrc","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","str","replaceStrings","translated","placeholder","replace","innerWidth","innerHeight","referrer","getOrigin","parent"],"mappings":"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","file":"static/js/main.626dc566.chunk.js","sourcesContent":["// Min image zoom level\nexport const MIN_ZOOM_LEVEL = 0;\n\n// Max image zoom level\nexport const MAX_ZOOM_LEVEL = 300;\n\n// Size ratio between previous and next zoom levels\nexport const ZOOM_RATIO = 1.007;\n\n// How much to increase/decrease the zoom level when the zoom buttons are clicked\nexport const ZOOM_BUTTON_INCREMENT_SIZE = 100;\n\n// Used to judge the amount of horizontal scroll needed to initiate a image move\nexport const WHEEL_MOVE_X_THRESHOLD = 200;\n\n// Used to judge the amount of vertical scroll needed to initiate a zoom action\nexport const WHEEL_MOVE_Y_THRESHOLD = 1;\n\nexport const KEYS = {\n  ESC: 27,\n  LEFT_ARROW: 37,\n  RIGHT_ARROW: 39,\n};\n\n// Actions\nexport const ACTION_NONE = 0;\nexport const ACTION_MOVE = 1;\nexport const ACTION_SWIPE = 2;\nexport const ACTION_PINCH = 3;\nexport const ACTION_ROTATE = 4;\n\n// Events source\nexport const SOURCE_ANY = 0;\nexport const SOURCE_MOUSE = 1;\nexport const SOURCE_TOUCH = 2;\nexport const SOURCE_POINTER = 3;\n\n// Minimal swipe distance\nexport const MIN_SWIPE_DISTANCE = 200;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport {\n  translate,\n  getWindowWidth,\n  getWindowHeight,\n  getHighestSafeWindowContext,\n} from './util';\nimport {\n  KEYS,\n  MIN_ZOOM_LEVEL,\n  MAX_ZOOM_LEVEL,\n  ZOOM_RATIO,\n  WHEEL_MOVE_X_THRESHOLD,\n  WHEEL_MOVE_Y_THRESHOLD,\n  ZOOM_BUTTON_INCREMENT_SIZE,\n  ACTION_NONE,\n  ACTION_MOVE,\n  ACTION_SWIPE,\n  ACTION_PINCH,\n  SOURCE_ANY,\n  SOURCE_MOUSE,\n  SOURCE_TOUCH,\n  SOURCE_POINTER,\n  MIN_SWIPE_DISTANCE,\n} from './constant';\nimport './style.css';\n\nclass ReactImageLightbox extends Component {\n  static isTargetMatchImage(target) {\n    return target && /ril-image-current/.test(target.className);\n  }\n\n  static parseMouseEvent(mouseEvent) {\n    return {\n      id: 'mouse',\n      source: SOURCE_MOUSE,\n      x: parseInt(mouseEvent.clientX, 10),\n      y: parseInt(mouseEvent.clientY, 10),\n    };\n  }\n\n  static parseTouchPointer(touchPointer) {\n    return {\n      id: touchPointer.identifier,\n      source: SOURCE_TOUCH,\n      x: parseInt(touchPointer.clientX, 10),\n      y: parseInt(touchPointer.clientY, 10),\n    };\n  }\n\n  static parsePointerEvent(pointerEvent) {\n    return {\n      id: pointerEvent.pointerId,\n      source: SOURCE_POINTER,\n      x: parseInt(pointerEvent.clientX, 10),\n      y: parseInt(pointerEvent.clientY, 10),\n    };\n  }\n\n  // Request to transition to the previous image\n  static getTransform({ x = 0, y = 0, zoom = 1, width, targetWidth }) {\n    let nextX = x;\n    const windowWidth = getWindowWidth();\n    if (width > windowWidth) {\n      nextX += (windowWidth - width) / 2;\n    }\n    const scaleFactor = zoom * (targetWidth / width);\n\n    return {\n      transform: `translate3d(${nextX}px,${y}px,0) scale3d(${scaleFactor},${scaleFactor},1)`,\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      //-----------------------------\n      // Animation\n      //-----------------------------\n\n      // Lightbox is closing\n      // When Lightbox is mounted, if animation is enabled it will open with the reverse of the closing animation\n      isClosing: !props.animationDisabled,\n\n      // Component parts should animate (e.g., when images are moving, or image is being zoomed)\n      shouldAnimate: false,\n\n      //-----------------------------\n      // Zoom settings\n      //-----------------------------\n      // Zoom level of image\n      zoomLevel: MIN_ZOOM_LEVEL,\n\n      //-----------------------------\n      // Image position settings\n      //-----------------------------\n      // Horizontal offset from center\n      offsetX: 0,\n\n      // Vertical offset from center\n      offsetY: 0,\n\n      // image load error for srcType\n      loadErrorStatus: {},\n    };\n\n    // Refs\n    this.outerEl = React.createRef();\n    this.zoomInBtn = React.createRef();\n    this.zoomOutBtn = React.createRef();\n    this.caption = React.createRef();\n\n    this.closeIfClickInner = this.closeIfClickInner.bind(this);\n    this.handleImageDoubleClick = this.handleImageDoubleClick.bind(this);\n    this.handleImageMouseWheel = this.handleImageMouseWheel.bind(this);\n    this.handleKeyInput = this.handleKeyInput.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleOuterMousewheel = this.handleOuterMousewheel.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.handlePointerEvent = this.handlePointerEvent.bind(this);\n    this.handleCaptionMousewheel = this.handleCaptionMousewheel.bind(this);\n    this.handleWindowResize = this.handleWindowResize.bind(this);\n    this.handleZoomInButtonClick = this.handleZoomInButtonClick.bind(this);\n    this.handleZoomOutButtonClick = this.handleZoomOutButtonClick.bind(this);\n    this.requestClose = this.requestClose.bind(this);\n    this.requestMoveNext = this.requestMoveNext.bind(this);\n    this.requestMovePrev = this.requestMovePrev.bind(this);\n  }\n\n  componentWillMount() {\n    // Timeouts - always clear it before umount\n    this.timeouts = [];\n\n    // Current action\n    this.currentAction = ACTION_NONE;\n\n    // Events source\n    this.eventsSource = SOURCE_ANY;\n\n    // Empty pointers list\n    this.pointerList = [];\n\n    // Prevent inner close\n    this.preventInnerClose = false;\n    this.preventInnerCloseTimeout = null;\n\n    // Used to disable animation when changing props.mainSrc|nextSrc|prevSrc\n    this.keyPressed = false;\n\n    // Used to store load state / dimensions of images\n    this.imageCache = {};\n\n    // Time the last keydown event was called (used in keyboard action rate limiting)\n    this.lastKeyDownTime = 0;\n\n    // Used for debouncing window resize event\n    this.resizeTimeout = null;\n\n    // Used to determine when actions are triggered by the scroll wheel\n    this.wheelActionTimeout = null;\n    this.resetScrollTimeout = null;\n    this.scrollX = 0;\n    this.scrollY = 0;\n\n    // Used in panning zoomed images\n    this.moveStartX = 0;\n    this.moveStartY = 0;\n    this.moveStartOffsetX = 0;\n    this.moveStartOffsetY = 0;\n\n    // Used to swipe\n    this.swipeStartX = 0;\n    this.swipeStartY = 0;\n    this.swipeEndX = 0;\n    this.swipeEndY = 0;\n\n    // Used to pinch\n    this.pinchTouchList = null;\n    this.pinchDistance = 0;\n\n    // Used to differentiate between images with identical src\n    this.keyCounter = 0;\n\n    // Used to detect a move when all src's remain unchanged (four or more of the same image in a row)\n    this.moveRequested = false;\n\n    if (!this.props.animationDisabled) {\n      // Make opening animation play\n      this.setState({ isClosing: false });\n    }\n  }\n\n  componentDidMount() {\n    // Prevents cross-origin errors when using a cross-origin iframe\n    this.windowContext = getHighestSafeWindowContext();\n\n    this.listeners = {\n      resize: this.handleWindowResize,\n      mouseup: this.handleMouseUp,\n      touchend: this.handleTouchEnd,\n      touchcancel: this.handleTouchEnd,\n      pointerdown: this.handlePointerEvent,\n      pointermove: this.handlePointerEvent,\n      pointerup: this.handlePointerEvent,\n      pointercancel: this.handlePointerEvent,\n    };\n    Object.keys(this.listeners).forEach(type => {\n      this.windowContext.addEventListener(type, this.listeners[type]);\n    });\n\n    this.loadAllImages();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Iterate through the source types for prevProps and nextProps to\n    //  determine if any of the sources changed\n    let sourcesChanged = false;\n    const prevSrcDict = {};\n    const nextSrcDict = {};\n    this.getSrcTypes().forEach(srcType => {\n      if (this.props[srcType.name] !== nextProps[srcType.name]) {\n        sourcesChanged = true;\n\n        prevSrcDict[this.props[srcType.name]] = true;\n        nextSrcDict[nextProps[srcType.name]] = true;\n      }\n    });\n\n    if (sourcesChanged || this.moveRequested) {\n      // Reset the loaded state for images not rendered next\n      Object.keys(prevSrcDict).forEach(prevSrc => {\n        if (!(prevSrc in nextSrcDict) && prevSrc in this.imageCache) {\n          this.imageCache[prevSrc].loaded = false;\n        }\n      });\n\n      this.moveRequested = false;\n\n      // Load any new images\n      this.loadAllImages(nextProps);\n    }\n  }\n\n  shouldComponentUpdate() {\n    // Wait for move...\n    return !this.moveRequested;\n  }\n\n  componentWillUnmount() {\n    this.didUnmount = true;\n    Object.keys(this.listeners).forEach(type => {\n      this.windowContext.removeEventListener(type, this.listeners[type]);\n    });\n    this.timeouts.forEach(tid => clearTimeout(tid));\n  }\n\n  setTimeout(func, time) {\n    const id = setTimeout(() => {\n      this.timeouts = this.timeouts.filter(tid => tid !== id);\n      func();\n    }, time);\n    this.timeouts.push(id);\n    return id;\n  }\n\n  setPreventInnerClose() {\n    if (this.preventInnerCloseTimeout) {\n      this.clearTimeout(this.preventInnerCloseTimeout);\n    }\n    this.preventInnerClose = true;\n    this.preventInnerCloseTimeout = this.setTimeout(() => {\n      this.preventInnerClose = false;\n      this.preventInnerCloseTimeout = null;\n    }, 100);\n  }\n\n  // Get info for the best suited image to display with the given srcType\n  getBestImageForType(srcType) {\n    let imageSrc = this.props[srcType];\n    let fitSizes = {};\n\n    if (this.isImageLoaded(imageSrc)) {\n      // Use full-size image if available\n      fitSizes = this.getFitSizes(\n        this.imageCache[imageSrc].width,\n        this.imageCache[imageSrc].height\n      );\n    } else if (this.isImageLoaded(this.props[`${srcType}Thumbnail`])) {\n      // Fall back to using thumbnail if the image has not been loaded\n      imageSrc = this.props[`${srcType}Thumbnail`];\n      fitSizes = this.getFitSizes(\n        this.imageCache[imageSrc].width,\n        this.imageCache[imageSrc].height,\n        true\n      );\n    } else {\n      return null;\n    }\n\n    return {\n      src: imageSrc,\n      height: this.imageCache[imageSrc].height,\n      width: this.imageCache[imageSrc].width,\n      targetHeight: fitSizes.height,\n      targetWidth: fitSizes.width,\n    };\n  }\n\n  // Get sizing for when an image is larger than the window\n  getFitSizes(width, height, stretch) {\n    const boxSize = this.getLightboxRect();\n    let maxHeight = boxSize.height - this.props.imagePadding * 2;\n    let maxWidth = boxSize.width - this.props.imagePadding * 2;\n\n    if (!stretch) {\n      maxHeight = Math.min(maxHeight, height);\n      maxWidth = Math.min(maxWidth, width);\n    }\n\n    const maxRatio = maxWidth / maxHeight;\n    const srcRatio = width / height;\n\n    if (maxRatio > srcRatio) {\n      // height is the constraining dimension of the photo\n      return {\n        width: (width * maxHeight) / height,\n        height: maxHeight,\n      };\n    }\n\n    return {\n      width: maxWidth,\n      height: (height * maxWidth) / width,\n    };\n  }\n\n  getMaxOffsets(zoomLevel = this.state.zoomLevel) {\n    const currentImageInfo = this.getBestImageForType('mainSrc');\n    if (currentImageInfo === null) {\n      return { maxX: 0, minX: 0, maxY: 0, minY: 0 };\n    }\n\n    const boxSize = this.getLightboxRect();\n    const zoomMultiplier = this.getZoomMultiplier(zoomLevel);\n\n    let maxX = 0;\n    if (zoomMultiplier * currentImageInfo.width - boxSize.width < 0) {\n      // if there is still blank space in the X dimension, don't limit except to the opposite edge\n      maxX = (boxSize.width - zoomMultiplier * currentImageInfo.width) / 2;\n    } else {\n      maxX = (zoomMultiplier * currentImageInfo.width - boxSize.width) / 2;\n    }\n\n    let maxY = 0;\n    if (zoomMultiplier * currentImageInfo.height - boxSize.height < 0) {\n      // if there is still blank space in the Y dimension, don't limit except to the opposite edge\n      maxY = (boxSize.height - zoomMultiplier * currentImageInfo.height) / 2;\n    } else {\n      maxY = (zoomMultiplier * currentImageInfo.height - boxSize.height) / 2;\n    }\n\n    return {\n      maxX,\n      maxY,\n      minX: -1 * maxX,\n      minY: -1 * maxY,\n    };\n  }\n\n  // Get image src types\n  getSrcTypes() {\n    return [\n      {\n        name: 'mainSrc',\n        keyEnding: `i${this.keyCounter}`,\n      },\n      {\n        name: 'mainSrcThumbnail',\n        keyEnding: `t${this.keyCounter}`,\n      },\n      {\n        name: 'nextSrc',\n        keyEnding: `i${this.keyCounter + 1}`,\n      },\n      {\n        name: 'nextSrcThumbnail',\n        keyEnding: `t${this.keyCounter + 1}`,\n      },\n      {\n        name: 'prevSrc',\n        keyEnding: `i${this.keyCounter - 1}`,\n      },\n      {\n        name: 'prevSrcThumbnail',\n        keyEnding: `t${this.keyCounter - 1}`,\n      },\n    ];\n  }\n\n  /**\n   * Get sizing when the image is scaled\n   */\n  getZoomMultiplier(zoomLevel = this.state.zoomLevel) {\n    return ZOOM_RATIO ** zoomLevel;\n  }\n\n  /**\n   * Get the size of the lightbox in pixels\n   */\n  getLightboxRect() {\n    if (this.outerEl.current) {\n      return this.outerEl.current.getBoundingClientRect();\n    }\n\n    return {\n      width: getWindowWidth(),\n      height: getWindowHeight(),\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    };\n  }\n\n  clearTimeout(id) {\n    this.timeouts = this.timeouts.filter(tid => tid !== id);\n    clearTimeout(id);\n  }\n\n  // Change zoom level\n  changeZoom(zoomLevel, clientX, clientY) {\n    // Ignore if zoom disabled\n    if (!this.props.enableZoom) {\n      return;\n    }\n\n    // Constrain zoom level to the set bounds\n    const nextZoomLevel = Math.max(\n      MIN_ZOOM_LEVEL,\n      Math.min(MAX_ZOOM_LEVEL, zoomLevel)\n    );\n\n    // Ignore requests that don't change the zoom level\n    if (nextZoomLevel === this.state.zoomLevel) {\n      return;\n    }\n\n    if (nextZoomLevel === MIN_ZOOM_LEVEL) {\n      // Snap back to center if zoomed all the way out\n      this.setState({\n        zoomLevel: nextZoomLevel,\n        offsetX: 0,\n        offsetY: 0,\n      });\n\n      return;\n    }\n\n    const imageBaseSize = this.getBestImageForType('mainSrc');\n    if (imageBaseSize === null) {\n      return;\n    }\n\n    const currentZoomMultiplier = this.getZoomMultiplier();\n    const nextZoomMultiplier = this.getZoomMultiplier(nextZoomLevel);\n\n    // Default to the center of the image to zoom when no mouse position specified\n    const boxRect = this.getLightboxRect();\n    const pointerX =\n      typeof clientX !== 'undefined'\n        ? clientX - boxRect.left\n        : boxRect.width / 2;\n    const pointerY =\n      typeof clientY !== 'undefined'\n        ? clientY - boxRect.top\n        : boxRect.height / 2;\n\n    const currentImageOffsetX =\n      (boxRect.width - imageBaseSize.width * currentZoomMultiplier) / 2;\n    const currentImageOffsetY =\n      (boxRect.height - imageBaseSize.height * currentZoomMultiplier) / 2;\n\n    const currentImageRealOffsetX = currentImageOffsetX - this.state.offsetX;\n    const currentImageRealOffsetY = currentImageOffsetY - this.state.offsetY;\n\n    const currentPointerXRelativeToImage =\n      (pointerX - currentImageRealOffsetX) / currentZoomMultiplier;\n    const currentPointerYRelativeToImage =\n      (pointerY - currentImageRealOffsetY) / currentZoomMultiplier;\n\n    const nextImageRealOffsetX =\n      pointerX - currentPointerXRelativeToImage * nextZoomMultiplier;\n    const nextImageRealOffsetY =\n      pointerY - currentPointerYRelativeToImage * nextZoomMultiplier;\n\n    const nextImageOffsetX =\n      (boxRect.width - imageBaseSize.width * nextZoomMultiplier) / 2;\n    const nextImageOffsetY =\n      (boxRect.height - imageBaseSize.height * nextZoomMultiplier) / 2;\n\n    let nextOffsetX = nextImageOffsetX - nextImageRealOffsetX;\n    let nextOffsetY = nextImageOffsetY - nextImageRealOffsetY;\n\n    // When zooming out, limit the offset so things don't get left askew\n    if (this.currentAction !== ACTION_PINCH) {\n      const maxOffsets = this.getMaxOffsets();\n      if (this.state.zoomLevel > nextZoomLevel) {\n        nextOffsetX = Math.max(\n          maxOffsets.minX,\n          Math.min(maxOffsets.maxX, nextOffsetX)\n        );\n        nextOffsetY = Math.max(\n          maxOffsets.minY,\n          Math.min(maxOffsets.maxY, nextOffsetY)\n        );\n      }\n    }\n\n    this.setState({\n      zoomLevel: nextZoomLevel,\n      offsetX: nextOffsetX,\n      offsetY: nextOffsetY,\n    });\n  }\n\n  closeIfClickInner(event) {\n    if (\n      !this.preventInnerClose &&\n      event.target.className.search(/\\bril-inner\\b/) > -1\n    ) {\n      this.requestClose(event);\n    }\n  }\n\n  /**\n   * Handle user keyboard actions\n   */\n  handleKeyInput(event) {\n    event.stopPropagation();\n\n    // Ignore key input during animations\n    if (this.isAnimating()) {\n      return;\n    }\n\n    // Allow slightly faster navigation through the images when user presses keys repeatedly\n    if (event.type === 'keyup') {\n      this.lastKeyDownTime -= this.props.keyRepeatKeyupBonus;\n      return;\n    }\n\n    const keyCode = event.which || event.keyCode;\n\n    // Ignore key presses that happen too close to each other (when rapid fire key pressing or holding down the key)\n    // But allow it if it's a lightbox closing action\n    const currentTime = new Date();\n    if (\n      currentTime.getTime() - this.lastKeyDownTime <\n      this.props.keyRepeatLimit &&\n      keyCode !== KEYS.ESC\n    ) {\n      return;\n    }\n    this.lastKeyDownTime = currentTime.getTime();\n\n    switch (keyCode) {\n      // ESC key closes the lightbox\n      case KEYS.ESC:\n        event.preventDefault();\n        this.requestClose(event);\n        break;\n\n      // Left arrow key moves to previous image\n      case KEYS.LEFT_ARROW:\n        if (!this.props.prevSrc) {\n          return;\n        }\n\n        event.preventDefault();\n        this.keyPressed = true;\n        this.requestMovePrev(event);\n        break;\n\n      // Right arrow key moves to next image\n      case KEYS.RIGHT_ARROW:\n        if (!this.props.nextSrc) {\n          return;\n        }\n\n        event.preventDefault();\n        this.keyPressed = true;\n        this.requestMoveNext(event);\n        break;\n\n      default:\n    }\n  }\n\n  /**\n   * Handle a mouse wheel event over the lightbox container\n   */\n  handleOuterMousewheel(event) {\n    // Prevent scrolling of the background\n    event.stopPropagation();\n\n    const xThreshold = WHEEL_MOVE_X_THRESHOLD;\n    let actionDelay = 0;\n    const imageMoveDelay = 500;\n\n    this.clearTimeout(this.resetScrollTimeout);\n    this.resetScrollTimeout = this.setTimeout(() => {\n      this.scrollX = 0;\n      this.scrollY = 0;\n    }, 300);\n\n    // Prevent rapid-fire zoom behavior\n    if (this.wheelActionTimeout !== null || this.isAnimating()) {\n      return;\n    }\n\n    if (Math.abs(event.deltaY) < Math.abs(event.deltaX)) {\n      // handle horizontal scrolls with image moves\n      this.scrollY = 0;\n      this.scrollX += event.deltaX;\n\n      const bigLeapX = xThreshold / 2;\n      // If the scroll amount has accumulated sufficiently, or a large leap was taken\n      if (this.scrollX >= xThreshold || event.deltaX >= bigLeapX) {\n        // Scroll right moves to next\n        this.requestMoveNext(event);\n        actionDelay = imageMoveDelay;\n        this.scrollX = 0;\n      } else if (\n        this.scrollX <= -1 * xThreshold ||\n        event.deltaX <= -1 * bigLeapX\n      ) {\n        // Scroll left moves to previous\n        this.requestMovePrev(event);\n        actionDelay = imageMoveDelay;\n        this.scrollX = 0;\n      }\n    }\n\n    // Allow successive actions after the set delay\n    if (actionDelay !== 0) {\n      this.wheelActionTimeout = this.setTimeout(() => {\n        this.wheelActionTimeout = null;\n      }, actionDelay);\n    }\n  }\n\n  handleImageMouseWheel(event) {\n    const yThreshold = WHEEL_MOVE_Y_THRESHOLD;\n\n    if (Math.abs(event.deltaY) >= Math.abs(event.deltaX)) {\n      event.stopPropagation();\n      // If the vertical scroll amount was large enough, perform a zoom\n      if (Math.abs(event.deltaY) < yThreshold) {\n        return;\n      }\n\n      this.scrollX = 0;\n      this.scrollY += event.deltaY;\n\n      this.changeZoom(\n        this.state.zoomLevel - event.deltaY,\n        event.clientX,\n        event.clientY\n      );\n    }\n  }\n\n  /**\n   * Handle a double click on the current image\n   */\n  handleImageDoubleClick(event) {\n    if (this.state.zoomLevel > MIN_ZOOM_LEVEL) {\n      // A double click when zoomed in zooms all the way out\n      this.changeZoom(MIN_ZOOM_LEVEL, event.clientX, event.clientY);\n    } else {\n      // A double click when zoomed all the way out zooms in\n      this.changeZoom(\n        this.state.zoomLevel + ZOOM_BUTTON_INCREMENT_SIZE,\n        event.clientX,\n        event.clientY\n      );\n    }\n  }\n\n  shouldHandleEvent(source) {\n    if (this.eventsSource === source) {\n      return true;\n    }\n    if (this.eventsSource === SOURCE_ANY) {\n      this.eventsSource = source;\n      return true;\n    }\n    switch (source) {\n      case SOURCE_MOUSE:\n        return false;\n      case SOURCE_TOUCH:\n        this.eventsSource = SOURCE_TOUCH;\n        this.filterPointersBySource();\n        return true;\n      case SOURCE_POINTER:\n        if (this.eventsSource === SOURCE_MOUSE) {\n          this.eventsSource = SOURCE_POINTER;\n          this.filterPointersBySource();\n          return true;\n        }\n        return false;\n      default:\n        return false;\n    }\n  }\n\n  addPointer(pointer) {\n    this.pointerList.push(pointer);\n  }\n\n  removePointer(pointer) {\n    this.pointerList = this.pointerList.filter(({ id }) => id !== pointer.id);\n  }\n\n  filterPointersBySource() {\n    this.pointerList = this.pointerList.filter(\n      ({ source }) => source === this.eventsSource\n    );\n  }\n\n  handleMouseDown(event) {\n    if (\n      this.shouldHandleEvent(SOURCE_MOUSE) &&\n      ReactImageLightbox.isTargetMatchImage(event.target)\n    ) {\n      this.addPointer(ReactImageLightbox.parseMouseEvent(event));\n      this.multiPointerStart(event);\n    }\n  }\n\n  handleMouseMove(event) {\n    if (this.shouldHandleEvent(SOURCE_MOUSE)) {\n      this.multiPointerMove(event, [ReactImageLightbox.parseMouseEvent(event)]);\n    }\n  }\n\n  handleMouseUp(event) {\n    if (this.shouldHandleEvent(SOURCE_MOUSE)) {\n      this.removePointer(ReactImageLightbox.parseMouseEvent(event));\n      this.multiPointerEnd(event);\n    }\n  }\n\n  handlePointerEvent(event) {\n    if (this.shouldHandleEvent(SOURCE_POINTER)) {\n      switch (event.type) {\n        case 'pointerdown':\n          if (ReactImageLightbox.isTargetMatchImage(event.target)) {\n            this.addPointer(ReactImageLightbox.parsePointerEvent(event));\n            this.multiPointerStart(event);\n          }\n          break;\n        case 'pointermove':\n          this.multiPointerMove(event, [\n            ReactImageLightbox.parsePointerEvent(event),\n          ]);\n          break;\n        case 'pointerup':\n        case 'pointercancel':\n          this.removePointer(ReactImageLightbox.parsePointerEvent(event));\n          this.multiPointerEnd(event);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  handleTouchStart(event) {\n    if (\n      this.shouldHandleEvent(SOURCE_TOUCH) &&\n      ReactImageLightbox.isTargetMatchImage(event.target)\n    ) {\n      [].forEach.call(event.changedTouches, eventTouch =>\n        this.addPointer(ReactImageLightbox.parseTouchPointer(eventTouch))\n      );\n      this.multiPointerStart(event);\n    }\n  }\n\n  handleTouchMove(event) {\n    if (this.shouldHandleEvent(SOURCE_TOUCH)) {\n      this.multiPointerMove(\n        event,\n        [].map.call(event.changedTouches, eventTouch =>\n          ReactImageLightbox.parseTouchPointer(eventTouch)\n        )\n      );\n    }\n  }\n\n  handleTouchEnd(event) {\n    if (this.shouldHandleEvent(SOURCE_TOUCH)) {\n      [].map.call(event.changedTouches, touch =>\n        this.removePointer(ReactImageLightbox.parseTouchPointer(touch))\n      );\n      this.multiPointerEnd(event);\n    }\n  }\n\n  decideMoveOrSwipe(pointer) {\n    if (this.state.zoomLevel <= MIN_ZOOM_LEVEL) {\n      this.handleSwipeStart(pointer);\n    } else {\n      this.handleMoveStart(pointer);\n    }\n  }\n\n  multiPointerStart(event) {\n    this.handleEnd(null);\n    switch (this.pointerList.length) {\n      case 1: {\n        event.preventDefault();\n        this.decideMoveOrSwipe(this.pointerList[0]);\n        break;\n      }\n      case 2: {\n        event.preventDefault();\n        this.handlePinchStart(this.pointerList);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  multiPointerMove(event, pointerList) {\n    switch (this.currentAction) {\n      case ACTION_MOVE: {\n        event.preventDefault();\n        this.handleMove(pointerList[0]);\n        break;\n      }\n      case ACTION_SWIPE: {\n        event.preventDefault();\n        this.handleSwipe(pointerList[0]);\n        break;\n      }\n      case ACTION_PINCH: {\n        event.preventDefault();\n        this.handlePinch(pointerList);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  multiPointerEnd(event) {\n    if (this.currentAction !== ACTION_NONE) {\n      this.setPreventInnerClose();\n      this.handleEnd(event);\n    }\n    switch (this.pointerList.length) {\n      case 0: {\n        this.eventsSource = SOURCE_ANY;\n        break;\n      }\n      case 1: {\n        event.preventDefault();\n        this.decideMoveOrSwipe(this.pointerList[0]);\n        break;\n      }\n      case 2: {\n        event.preventDefault();\n        this.handlePinchStart(this.pointerList);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  handleEnd(event) {\n    switch (this.currentAction) {\n      case ACTION_MOVE:\n        this.handleMoveEnd(event);\n        break;\n      case ACTION_SWIPE:\n        this.handleSwipeEnd(event);\n        break;\n      case ACTION_PINCH:\n        this.handlePinchEnd(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Handle move start over the lightbox container\n  // This happens:\n  // - On a mouseDown event\n  // - On a touchstart event\n  handleMoveStart({ x: clientX, y: clientY }) {\n    if (!this.props.enableZoom) {\n      return;\n    }\n    this.currentAction = ACTION_MOVE;\n    this.moveStartX = clientX;\n    this.moveStartY = clientY;\n    this.moveStartOffsetX = this.state.offsetX;\n    this.moveStartOffsetY = this.state.offsetY;\n  }\n\n  // Handle dragging over the lightbox container\n  // This happens:\n  // - After a mouseDown and before a mouseUp event\n  // - After a touchstart and before a touchend event\n  handleMove({ x: clientX, y: clientY }) {\n    const newOffsetX = this.moveStartX - clientX + this.moveStartOffsetX;\n    const newOffsetY = this.moveStartY - clientY + this.moveStartOffsetY;\n    if (\n      this.state.offsetX !== newOffsetX ||\n      this.state.offsetY !== newOffsetY\n    ) {\n      this.setState({\n        offsetX: newOffsetX,\n        offsetY: newOffsetY,\n      });\n    }\n  }\n\n  handleMoveEnd() {\n    this.currentAction = ACTION_NONE;\n    this.moveStartX = 0;\n    this.moveStartY = 0;\n    this.moveStartOffsetX = 0;\n    this.moveStartOffsetY = 0;\n    // Snap image back into frame if outside max offset range\n    const maxOffsets = this.getMaxOffsets();\n    const nextOffsetX = Math.max(\n      maxOffsets.minX,\n      Math.min(maxOffsets.maxX, this.state.offsetX)\n    );\n    const nextOffsetY = Math.max(\n      maxOffsets.minY,\n      Math.min(maxOffsets.maxY, this.state.offsetY)\n    );\n    if (\n      nextOffsetX !== this.state.offsetX ||\n      nextOffsetY !== this.state.offsetY\n    ) {\n      this.setState({\n        offsetX: nextOffsetX,\n        offsetY: nextOffsetY,\n        shouldAnimate: true,\n      });\n      this.setTimeout(() => {\n        this.setState({ shouldAnimate: false });\n      }, this.props.animationDuration);\n    }\n  }\n\n  handleSwipeStart({ x: clientX, y: clientY }) {\n    this.currentAction = ACTION_SWIPE;\n    this.swipeStartX = clientX;\n    this.swipeStartY = clientY;\n    this.swipeEndX = clientX;\n    this.swipeEndY = clientY;\n  }\n\n  handleSwipe({ x: clientX, y: clientY }) {\n    this.swipeEndX = clientX;\n    this.swipeEndY = clientY;\n  }\n\n  handleSwipeEnd(event) {\n    const xDiff = this.swipeEndX - this.swipeStartX;\n    const xDiffAbs = Math.abs(xDiff);\n    const yDiffAbs = Math.abs(this.swipeEndY - this.swipeStartY);\n\n    this.currentAction = ACTION_NONE;\n    this.swipeStartX = 0;\n    this.swipeStartY = 0;\n    this.swipeEndX = 0;\n    this.swipeEndY = 0;\n\n    if (!event || this.isAnimating() || xDiffAbs < yDiffAbs * 1.5) {\n      return;\n    }\n\n    if (xDiffAbs < MIN_SWIPE_DISTANCE) {\n      const boxRect = this.getLightboxRect();\n      if (xDiffAbs < boxRect.width / 4) {\n        return;\n      }\n    }\n\n    if (xDiff > 0 && this.props.prevSrc) {\n      event.preventDefault();\n      this.requestMovePrev();\n    } else if (xDiff < 0 && this.props.nextSrc) {\n      event.preventDefault();\n      this.requestMoveNext();\n    }\n  }\n\n  calculatePinchDistance([a, b] = this.pinchTouchList) {\n    return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n  }\n\n  calculatePinchCenter([a, b] = this.pinchTouchList) {\n    return {\n      x: a.x - (a.x - b.x) / 2,\n      y: a.y - (a.y - b.y) / 2,\n    };\n  }\n\n  handlePinchStart(pointerList) {\n    if (!this.props.enableZoom) {\n      return;\n    }\n    this.currentAction = ACTION_PINCH;\n    this.pinchTouchList = pointerList.map(({ id, x, y }) => ({ id, x, y }));\n    this.pinchDistance = this.calculatePinchDistance();\n  }\n\n  handlePinch(pointerList) {\n    this.pinchTouchList = this.pinchTouchList.map(oldPointer => {\n      for (let i = 0; i < pointerList.length; i += 1) {\n        if (pointerList[i].id === oldPointer.id) {\n          return pointerList[i];\n        }\n      }\n\n      return oldPointer;\n    });\n\n    const newDistance = this.calculatePinchDistance();\n\n    const zoomLevel = this.state.zoomLevel + newDistance - this.pinchDistance;\n\n    this.pinchDistance = newDistance;\n    const { x: clientX, y: clientY } = this.calculatePinchCenter(\n      this.pinchTouchList\n    );\n    this.changeZoom(zoomLevel, clientX, clientY);\n  }\n\n  handlePinchEnd() {\n    this.currentAction = ACTION_NONE;\n    this.pinchTouchList = null;\n    this.pinchDistance = 0;\n  }\n\n  // Handle the window resize event\n  handleWindowResize() {\n    this.clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = this.setTimeout(this.forceUpdate.bind(this), 100);\n  }\n\n  handleZoomInButtonClick() {\n    const nextZoomLevel = this.state.zoomLevel + ZOOM_BUTTON_INCREMENT_SIZE;\n    this.changeZoom(nextZoomLevel);\n    if (nextZoomLevel === MAX_ZOOM_LEVEL) {\n      this.zoomOutBtn.current.focus();\n    }\n  }\n\n  handleZoomOutButtonClick() {\n    const nextZoomLevel = this.state.zoomLevel - ZOOM_BUTTON_INCREMENT_SIZE;\n    this.changeZoom(nextZoomLevel);\n    if (nextZoomLevel === MIN_ZOOM_LEVEL) {\n      this.zoomInBtn.current.focus();\n    }\n  }\n\n  handleCaptionMousewheel(event) {\n    event.stopPropagation();\n\n    if (!this.caption.current) {\n      return;\n    }\n\n    const { height } = this.caption.current.getBoundingClientRect();\n    const { scrollHeight, scrollTop } = this.caption.current;\n    if (\n      (event.deltaY > 0 && height + scrollTop >= scrollHeight) ||\n      (event.deltaY < 0 && scrollTop <= 0)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  // Detach key and mouse input events\n  isAnimating() {\n    return this.state.shouldAnimate || this.state.isClosing;\n  }\n\n  // Check if image is loaded\n  isImageLoaded(imageSrc) {\n    return (\n      imageSrc &&\n      imageSrc in this.imageCache &&\n      this.imageCache[imageSrc].loaded\n    );\n  }\n\n  // Load image from src and call callback with image width and height on load\n  loadImage(srcType, imageSrc, done) {\n    // Return the image info if it is already cached\n    if (this.isImageLoaded(imageSrc)) {\n      this.setTimeout(() => {\n        done();\n      }, 1);\n      return;\n    }\n\n    const inMemoryImage = new global.Image();\n\n    if (this.props.imageCrossOrigin) {\n      inMemoryImage.crossOrigin = this.props.imageCrossOrigin;\n    }\n\n    inMemoryImage.onerror = errorEvent => {\n      this.props.onImageLoadError(imageSrc, srcType, errorEvent);\n\n      // failed to load so set the state loadErrorStatus\n      this.setState(prevState => ({\n        loadErrorStatus: { ...prevState.loadErrorStatus, [srcType]: true },\n      }));\n\n      done(errorEvent);\n    };\n\n    inMemoryImage.onload = () => {\n      this.props.onImageLoad(imageSrc, srcType, inMemoryImage);\n\n      this.imageCache[imageSrc] = {\n        loaded: true,\n        width: inMemoryImage.width,\n        height: inMemoryImage.height,\n      };\n\n      done();\n    };\n\n    inMemoryImage.src = imageSrc;\n  }\n\n  // Load all images and their thumbnails\n  loadAllImages(props = this.props) {\n    const generateLoadDoneCallback = (srcType, imageSrc) => err => {\n      // Give up showing image on error\n      if (err) {\n        return;\n      }\n\n      // Don't rerender if the src is not the same as when the load started\n      // or if the component has unmounted\n      if (this.props[srcType] !== imageSrc || this.didUnmount) {\n        return;\n      }\n\n      // Force rerender with the new image\n      this.forceUpdate();\n    };\n\n    // Load the images\n    this.getSrcTypes().forEach(srcType => {\n      const type = srcType.name;\n\n      // there is no error when we try to load it initially\n      if (props[type] && this.state.loadErrorStatus[type]) {\n        this.setState(prevState => ({\n          loadErrorStatus: { ...prevState.loadErrorStatus, [type]: false },\n        }));\n      }\n\n      // Load unloaded images\n      if (props[type] && !this.isImageLoaded(props[type])) {\n        this.loadImage(\n          type,\n          props[type],\n          generateLoadDoneCallback(type, props[type])\n        );\n      }\n    });\n  }\n\n  // Request that the lightbox be closed\n  requestClose(event) {\n    // Call the parent close request\n    const closeLightbox = () => this.props.onCloseRequest(event);\n\n    if (\n      this.props.animationDisabled ||\n      (event.type === 'keydown' && !this.props.animationOnKeyInput)\n    ) {\n      // No animation\n      closeLightbox();\n      return;\n    }\n\n    // With animation\n    // Start closing animation\n    this.setState({ isClosing: true });\n\n    // Perform the actual closing at the end of the animation\n    this.setTimeout(closeLightbox, this.props.animationDuration);\n  }\n\n  requestMove(direction, event) {\n    // Reset the zoom level on image move\n    const nextState = {\n      zoomLevel: MIN_ZOOM_LEVEL,\n      offsetX: 0,\n      offsetY: 0,\n    };\n\n    // Enable animated states\n    if (\n      !this.props.animationDisabled &&\n      (!this.keyPressed || this.props.animationOnKeyInput)\n    ) {\n      nextState.shouldAnimate = true;\n      this.setTimeout(\n        () => this.setState({ shouldAnimate: false }),\n        this.props.animationDuration\n      );\n    }\n    this.keyPressed = false;\n\n    this.moveRequested = true;\n\n    if (direction === 'prev') {\n      this.keyCounter -= 1;\n      this.setState(nextState);\n      this.props.onMovePrevRequest(event);\n    } else {\n      this.keyCounter += 1;\n      this.setState(nextState);\n      this.props.onMoveNextRequest(event);\n    }\n  }\n\n  // Request to transition to the next image\n  requestMoveNext(event) {\n    this.requestMove('next', event);\n  }\n\n  // Request to transition to the previous image\n  requestMovePrev(event) {\n    this.requestMove('prev', event);\n  }\n\n  render() {\n    const {\n      animationDisabled,\n      animationDuration,\n      clickOutsideToClose,\n      discourageDownloads,\n      enableZoom,\n      imageTitle,\n      nextSrc,\n      prevSrc,\n      toolbarButtons,\n      reactModalStyle,\n      onAfterOpen,\n      imageCrossOrigin,\n      reactModalProps,\n    } = this.props;\n    const {\n      zoomLevel,\n      offsetX,\n      offsetY,\n      isClosing,\n      loadErrorStatus,\n    } = this.state;\n\n    const boxSize = this.getLightboxRect();\n    let transitionStyle = {};\n\n    // Transition settings for sliding animations\n    if (!animationDisabled && this.isAnimating()) {\n      transitionStyle = {\n        ...transitionStyle,\n        transition: `transform ${animationDuration}ms`,\n      };\n    }\n\n    // Key endings to differentiate between images with the same src\n    const keyEndings = {};\n    this.getSrcTypes().forEach(({ name, keyEnding }) => {\n      keyEndings[name] = keyEnding;\n    });\n\n    // Images to be displayed\n    const images = [];\n    const addImage = (srcType, imageClass, transforms) => {\n      // Ignore types that have no source defined for their full size image\n      if (!this.props[srcType]) {\n        return;\n      }\n      const bestImageInfo = this.getBestImageForType(srcType);\n\n      const imageStyle = {\n        ...transitionStyle,\n        ...ReactImageLightbox.getTransform({\n          ...transforms,\n          ...bestImageInfo,\n        }),\n      };\n\n      if (zoomLevel > MIN_ZOOM_LEVEL) {\n        imageStyle.cursor = 'move';\n      }\n\n      // support IE 9 and 11\n      const hasTrueValue = object =>\n        Object.keys(object).some(key => object[key]);\n\n      // when error on one of the loads then push custom error stuff\n      if (bestImageInfo === null && hasTrueValue(loadErrorStatus)) {\n        images.push(\n          <div\n            className={`${imageClass} ril__image ril-errored`}\n            style={imageStyle}\n            key={this.props[srcType] + keyEndings[srcType]}\n          >\n            <div className=\"ril__errorContainer\">\n              {this.props.imageLoadErrorMessage}\n            </div>\n          </div>\n        );\n\n        return;\n      }\n      if (bestImageInfo === null) {\n        const loadingIcon = (\n          <div className=\"ril-loading-circle ril__loadingCircle ril__loadingContainer__icon\">\n            {[...new Array(12)].map((_, index) => (\n              <div\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                className=\"ril-loading-circle-point ril__loadingCirclePoint\"\n              />\n            ))}\n          </div>\n        );\n\n        // Fall back to loading icon if the thumbnail has not been loaded\n        images.push(\n          <div\n            className={`${imageClass} ril__image ril-not-loaded`}\n            style={imageStyle}\n            key={this.props[srcType] + keyEndings[srcType]}\n          >\n            <div className=\"ril__loadingContainer\">{loadingIcon}</div>\n          </div>\n        );\n\n        return;\n      }\n\n      const imageSrc = bestImageInfo.src;\n      if (discourageDownloads) {\n        imageStyle.backgroundImage = `url('${imageSrc}')`;\n        images.push(\n          <div\n            className={`${imageClass} ril__image ril__imageDiscourager`}\n            onDoubleClick={this.handleImageDoubleClick}\n            onWheel={this.handleImageMouseWheel}\n            style={imageStyle}\n            key={imageSrc + keyEndings[srcType]}\n          >\n            <div className=\"ril-download-blocker ril__downloadBlocker\" />\n          </div>\n        );\n      } else {\n        images.push(\n          <img\n            {...(imageCrossOrigin ? { crossOrigin: imageCrossOrigin } : {})}\n            className={`${imageClass} ril__image`}\n            onDoubleClick={this.handleImageDoubleClick}\n            onWheel={this.handleImageMouseWheel}\n            onDragStart={e => e.preventDefault()}\n            style={imageStyle}\n            src={imageSrc}\n            key={imageSrc + keyEndings[srcType]}\n            alt={\n              typeof imageTitle === 'string' ? imageTitle : translate('Image')\n            }\n            draggable={false}\n          />\n        );\n      }\n    };\n\n    const zoomMultiplier = this.getZoomMultiplier();\n    // Next Image (displayed on the right)\n    addImage('nextSrc', 'ril-image-next ril__imageNext', {\n      x: boxSize.width,\n    });\n    // Main Image\n    addImage('mainSrc', 'ril-image-current', {\n      x: -1 * offsetX,\n      y: -1 * offsetY,\n      zoom: zoomMultiplier,\n    });\n    // Previous Image (displayed on the left)\n    addImage('prevSrc', 'ril-image-prev ril__imagePrev', {\n      x: -1 * boxSize.width,\n    });\n\n    const modalStyle = {\n      overlay: {\n        zIndex: 1000,\n        backgroundColor: 'transparent',\n        ...reactModalStyle.overlay, // Allow style overrides via props\n      },\n      content: {\n        backgroundColor: 'transparent',\n        overflow: 'hidden', // Needed, otherwise keyboard shortcuts scroll the page\n        border: 'none',\n        borderRadius: 0,\n        padding: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        ...reactModalStyle.content, // Allow style overrides via props\n      },\n    };\n\n    return (\n      <Modal\n        isOpen\n        onRequestClose={clickOutsideToClose ? this.requestClose : undefined}\n        onAfterOpen={() => {\n          // Focus on the div with key handlers\n          if (this.outerEl.current) {\n            this.outerEl.current.focus();\n          }\n\n          onAfterOpen();\n        }}\n        style={modalStyle}\n        contentLabel={translate('Lightbox')}\n        appElement={\n          typeof global.window !== 'undefined'\n            ? global.window.document.body\n            : undefined\n        }\n        {...reactModalProps}\n      >\n        <div // eslint-disable-line jsx-a11y/no-static-element-interactions\n          // Floating modal with closing animations\n          className={`ril-outer ril__outer ril__outerAnimating ${\n            this.props.wrapperClassName\n            } ${isClosing ? 'ril-closing ril__outerClosing' : ''}`}\n          style={{\n            transition: `opacity ${animationDuration}ms`,\n            animationDuration: `${animationDuration}ms`,\n            animationDirection: isClosing ? 'normal' : 'reverse',\n          }}\n          ref={this.outerEl}\n          onWheel={this.handleOuterMousewheel}\n          onMouseMove={this.handleMouseMove}\n          onMouseDown={this.handleMouseDown}\n          onTouchStart={this.handleTouchStart}\n          onTouchMove={this.handleTouchMove}\n          tabIndex=\"-1\" // Enables key handlers on div\n          onKeyDown={this.handleKeyInput}\n          onKeyUp={this.handleKeyInput}\n        >\n          <div // eslint-disable-line jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events\n            // Image holder\n            className=\"ril-inner ril__inner\"\n            onClick={clickOutsideToClose ? this.closeIfClickInner : undefined}\n          >\n            {images}\n          </div>\n\n          {prevSrc && (\n            <button // Move to previous image button\n              type=\"button\"\n              className=\"ril-prev-button ril__navButtons ril__navButtonPrev\"\n              key=\"prev\"\n              aria-label={this.props.prevLabel}\n              onClick={!this.isAnimating() ? this.requestMovePrev : undefined} // Ignore clicks during animation\n            />\n          )}\n\n          {nextSrc && (\n            <button // Move to next image button\n              type=\"button\"\n              className=\"ril-next-button ril__navButtons ril__navButtonNext\"\n              key=\"next\"\n              aria-label={this.props.nextLabel}\n              onClick={!this.isAnimating() ? this.requestMoveNext : undefined} // Ignore clicks during animation\n            />\n          )}\n\n          <div // Lightbox toolbar\n            className=\"ril-toolbar ril__toolbar\"\n          >\n            <ul className=\"ril-toolbar-left ril__toolbarSide ril__toolbarLeftSide\">\n              <li className=\"ril-toolbar__item ril__toolbarItem\">\n                <span className=\"ril-toolbar__item__child ril__toolbarItemChild\">\n                  {imageTitle}\n                </span>\n              </li>\n            </ul>\n\n            <ul className=\"ril-toolbar-right ril__toolbarSide ril__toolbarRightSide\">\n              {toolbarButtons &&\n                toolbarButtons.map((button, i) => (\n                  <li\n                    key={`button_${i + 1}`}\n                    className=\"ril-toolbar__item ril__toolbarItem\"\n                  >\n                    {button}\n                  </li>\n                ))}\n\n              {enableZoom && (\n                <li className=\"ril-toolbar__item ril__toolbarItem\">\n                  <button // Lightbox zoom in button\n                    type=\"button\"\n                    key=\"zoom-in\"\n                    aria-label={this.props.zoomInLabel}\n                    className={[\n                      'ril-zoom-in',\n                      'ril__toolbarItemChild',\n                      'ril__builtinButton',\n                      'ril__zoomInButton',\n                      ...(zoomLevel === MAX_ZOOM_LEVEL\n                        ? ['ril__builtinButtonDisabled']\n                        : []),\n                    ].join(' ')}\n                    ref={this.zoomInBtn}\n                    disabled={\n                      this.isAnimating() || zoomLevel === MAX_ZOOM_LEVEL\n                    }\n                    onClick={\n                      !this.isAnimating() && zoomLevel !== MAX_ZOOM_LEVEL\n                        ? this.handleZoomInButtonClick\n                        : undefined\n                    }\n                  />\n                </li>\n              )}\n\n              {enableZoom && (\n                <li className=\"ril-toolbar__item ril__toolbarItem\">\n                  <button // Lightbox zoom out button\n                    type=\"button\"\n                    key=\"zoom-out\"\n                    aria-label={this.props.zoomOutLabel}\n                    className={[\n                      'ril-zoom-out',\n                      'ril__toolbarItemChild',\n                      'ril__builtinButton',\n                      'ril__zoomOutButton',\n                      ...(zoomLevel === MIN_ZOOM_LEVEL\n                        ? ['ril__builtinButtonDisabled']\n                        : []),\n                    ].join(' ')}\n                    ref={this.zoomOutBtn}\n                    disabled={\n                      this.isAnimating() || zoomLevel === MIN_ZOOM_LEVEL\n                    }\n                    onClick={\n                      !this.isAnimating() && zoomLevel !== MIN_ZOOM_LEVEL\n                        ? this.handleZoomOutButtonClick\n                        : undefined\n                    }\n                  />\n                </li>\n              )}\n\n              <li className=\"ril-toolbar__item ril__toolbarItem\">\n                <button // Lightbox close button\n                  type=\"button\"\n                  key=\"close\"\n                  aria-label={this.props.closeLabel}\n                  className=\"ril-close ril-toolbar__item__child ril__toolbarItemChild ril__builtinButton ril__closeButton\"\n                  onClick={!this.isAnimating() ? this.requestClose : undefined} // Ignore clicks during animation\n                />\n              </li>\n            </ul>\n          </div>\n\n          {this.props.imageCaption && (\n            // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n            <div // Image caption\n              onWheel={this.handleCaptionMousewheel}\n              onMouseDown={event => event.stopPropagation()}\n              className=\"ril-caption ril__caption\"\n              ref={this.caption}\n            >\n              <div className=\"ril-caption-content ril__captionContent\">\n                {this.props.imageCaption}\n              </div>\n            </div>\n          )}\n\n          <div className=\"ril-actions\">\n            <img src=\"Yes.png\" className=\"ril-actions__btn m-3\" alt=\"Yes here...\" onClick={this.props.onRateClick.bind(null, 'Yes')} />\n            <img src=\"No.png\" className=\"ril-actions__btn m-3\" alt=\"No here...\" onClick={this.props.onRateClick.bind(null, 'No')} />\n            <img src=\"Maybe.png\" className=\"ril-actions__btn m-3\" alt=\"Maybe here...\" onClick={this.props.onRateClick.bind(null, 'Maybe')} />\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nReactImageLightbox.propTypes = {\n  //-----------------------------\n  // Image sources\n  //-----------------------------\n\n  // Main display image url\n  mainSrc: PropTypes.string.isRequired, // eslint-disable-line react/no-unused-prop-types\n\n  // Previous display image url (displayed to the left)\n  // If left undefined, movePrev actions will not be performed, and the button not displayed\n  prevSrc: PropTypes.string,\n\n  // Next display image url (displayed to the right)\n  // If left undefined, moveNext actions will not be performed, and the button not displayed\n  nextSrc: PropTypes.string,\n\n  //-----------------------------\n  // Image thumbnail sources\n  //-----------------------------\n\n  // Thumbnail image url corresponding to props.mainSrc\n  mainSrcThumbnail: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n\n  // Thumbnail image url corresponding to props.prevSrc\n  prevSrcThumbnail: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n\n  // Thumbnail image url corresponding to props.nextSrc\n  nextSrcThumbnail: PropTypes.string, // eslint-disable-line react/no-unused-prop-types\n\n  //-----------------------------\n  // Event Handlers\n  //-----------------------------\n\n  // Close window event\n  // Should change the parent state such that the lightbox is not rendered\n  onCloseRequest: PropTypes.func.isRequired,\n\n  // Move to previous image event\n  // Should change the parent state such that props.prevSrc becomes props.mainSrc,\n  //  props.mainSrc becomes props.nextSrc, etc.\n  onMovePrevRequest: PropTypes.func,\n\n  // Move to next image event\n  // Should change the parent state such that props.nextSrc becomes props.mainSrc,\n  //  props.mainSrc becomes props.prevSrc, etc.\n  onMoveNextRequest: PropTypes.func,\n\n  // Called when an image fails to load\n  // (imageSrc: string, srcType: string, errorEvent: object): void\n  onImageLoadError: PropTypes.func,\n\n  // Called when image successfully loads\n  onImageLoad: PropTypes.func,\n\n  // Open window event\n  onAfterOpen: PropTypes.func,\n\n  //-----------------------------\n  // Download discouragement settings\n  //-----------------------------\n\n  // Enable download discouragement (prevents [right-click -> Save Image As...])\n  discourageDownloads: PropTypes.bool,\n\n  //-----------------------------\n  // Animation settings\n  //-----------------------------\n\n  // Disable all animation\n  animationDisabled: PropTypes.bool,\n\n  // Disable animation on actions performed with keyboard shortcuts\n  animationOnKeyInput: PropTypes.bool,\n\n  // Animation duration (ms)\n  animationDuration: PropTypes.number,\n\n  //-----------------------------\n  // Keyboard shortcut settings\n  //-----------------------------\n\n  // Required interval of time (ms) between key actions\n  // (prevents excessively fast navigation of images)\n  keyRepeatLimit: PropTypes.number,\n\n  // Amount of time (ms) restored after each keyup\n  // (makes rapid key presses slightly faster than holding down the key to navigate images)\n  keyRepeatKeyupBonus: PropTypes.number,\n\n  //-----------------------------\n  // Image info\n  //-----------------------------\n\n  // Image title\n  imageTitle: PropTypes.node,\n\n  // Image caption\n  imageCaption: PropTypes.node,\n\n  // Optional crossOrigin attribute\n  imageCrossOrigin: PropTypes.string,\n\n  //-----------------------------\n  // Lightbox style\n  //-----------------------------\n\n  // Set z-index style, etc., for the parent react-modal (format: https://github.com/reactjs/react-modal#styles )\n  reactModalStyle: PropTypes.shape({}),\n\n  // Padding (px) between the edge of the window and the lightbox\n  imagePadding: PropTypes.number,\n\n  wrapperClassName: PropTypes.string,\n\n  //-----------------------------\n  // Other\n  //-----------------------------\n\n  // Array of custom toolbar buttons\n  toolbarButtons: PropTypes.arrayOf(PropTypes.node),\n\n  // When true, clicks outside of the image close the lightbox\n  clickOutsideToClose: PropTypes.bool,\n\n  // Set to false to disable zoom functionality and hide zoom buttons\n  enableZoom: PropTypes.bool,\n\n  // Override props set on react-modal (https://github.com/reactjs/react-modal)\n  reactModalProps: PropTypes.shape({}),\n\n  // Aria-labels\n  nextLabel: PropTypes.string,\n  prevLabel: PropTypes.string,\n  zoomInLabel: PropTypes.string,\n  zoomOutLabel: PropTypes.string,\n  closeLabel: PropTypes.string,\n\n  imageLoadErrorMessage: PropTypes.node,\n};\n\nReactImageLightbox.defaultProps = {\n  imageTitle: null,\n  imageCaption: null,\n  toolbarButtons: null,\n  reactModalProps: {},\n  animationDisabled: false,\n  animationDuration: 300,\n  animationOnKeyInput: false,\n  clickOutsideToClose: true,\n  closeLabel: 'Close lightbox',\n  discourageDownloads: false,\n  enableZoom: true,\n  imagePadding: 10,\n  imageCrossOrigin: null,\n  keyRepeatKeyupBonus: 40,\n  keyRepeatLimit: 180,\n  mainSrcThumbnail: null,\n  nextLabel: 'Next image',\n  nextSrc: null,\n  nextSrcThumbnail: null,\n  onAfterOpen: () => { },\n  onImageLoadError: () => { },\n  onImageLoad: () => { },\n  onMoveNextRequest: () => { },\n  onMovePrevRequest: () => { },\n  prevLabel: 'Previous image',\n  prevSrc: null,\n  prevSrcThumbnail: null,\n  reactModalStyle: {},\n  wrapperClassName: '',\n  zoomInLabel: 'Zoom in',\n  zoomOutLabel: 'Zoom out',\n  imageLoadErrorMessage: 'This image failed to load',\n};\n\nexport default ReactImageLightbox;\n","import React, { Component } from 'react'\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-3 mb-3\" data-category={this.props.category}>\r\n        <div className=\"card\">\r\n          <img style={{ maxHeight: '150px', cursor: 'pointer' }} className=\"card-img-top img-responsive\" src={this.props.imageUrl} alt=\"Images here...\"  onClick={this.props.onClick}/>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{this.props.title}</h5>\r\n            <p className=\"card-text\">{this.props.description.length > 90 ? this.props.description.slice(0, 90) + '...' : this.props.description}</p>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <span className=\"badge badge-info\"><small>{this.props.category}</small></span>\r\n            <div className=\"card-footer__action\">\r\n              <img src=\"Yes.png\" className=\"card-footer__action_btn ml-1\"/>\r\n              <img src=\"No.png\" className=\"card-footer__action_btn ml-1\"/>\r\n              <img src=\"Maybe.png\" className=\"card-footer__action_btn ml-1\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card mb-3\" data-category={this.props.category}>\r\n        <div className=\"row no-gutters\">\r\n          <div className=\"col-md-4\"  onClick={this.props.onClick}>\r\n            <img style={{height: '100%', cursor: 'pointer'}} className=\"card-img rounded-0\" src={this.props.imageUrl} alt=\"Images here...\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{this.props.title}</h5>\r\n              <p className=\"card-text\">{this.props.description}</p>\r\n              <p className=\"card-text\">\r\n                <span className=\"badge badge-info\"><small>{this.props.category}</small></span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\n\r\nexport default () => (\r\n  <header>\r\n    <div className=\"collapse bg-dark\" id=\"navbarHeader\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-8 col-md-7 py-4\">\r\n            <h4 className=\"text-white\">About</h4>\r\n            <p className=\"text-muted\">Add some information about the album below, the author, or any other background context. Make it a few sentences long so folks can pick up some informative tidbits. Then, link them off to some social networking sites or contact information.</p>\r\n          </div>\r\n          <div className=\"col-sm-4 offset-md-1 py-4\">\r\n            <h4 className=\"text-white\">Contact</h4>\r\n            <ul className=\"list-unstyled\">\r\n              <li><a href=\"#\" className=\"text-white\">Follow on Twitter</a></li>\r\n              <li><a href=\"#\" className=\"text-white\">Like on Facebook</a></li>\r\n              <li><a href=\"#\" className=\"text-white\">Email me</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"navbar navbar-light bg-light shadow-sm fixed-top\">\r\n      <div className=\"container d-flex justify-content-between\">\r\n        <a href=\"#\" className=\"navbar-brand d-flex align-items-center\">\r\n          <img width=\"95\" src=\"https://heyjoe.io/wp-content/uploads/2019/06/cropped-heyjoe.png\"/>\r\n          <strong className=\"ml-3\">Album rating</strong>\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarHeader\" aria-controls=\"navbarHeader\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </header>\r\n)","import Lightbox from './react-image-lightbox';\n\nexport default Lightbox;\n","import React, { Component, Fragment } from 'react';\nimport Photo from './components/Photo'\nimport PhotoListItem from './components/PhotoListItem'\nimport Header from './components/Header'\nimport './App.scss'\nimport 'bootstrap/scss/bootstrap.scss'\nimport Lightbox from './components/ImageLightbox'\nimport './components/ImageLightbox/style.css'\n\nconst PHOTODATA = [\n  {\n    id: 1,\n    category: 'Yes',\n    imageUrl: 'https://heyjoe.io/wp-content/uploads/2019/07/Non-Union-GameStop-Callback-sizecards_page-0067.jpg',\n    thumbnail: 'https://via.placeholder.com/150x100',\n    title: 'Title A',\n    description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`\n  }, {\n    id: 2,\n    category: 'Maybe',\n    imageUrl: 'https://heyjoe.io/wp-content/uploads/2019/07/Non-Union-GameStop-Callback-sizecards_page-0066.jpg',\n    thumbnail: 'https://via.placeholder.com/150x100',\n    title: 'Title B',\n    description: `It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).`\n  },\n  {\n    id: 3,\n    category: 'No',\n    imageUrl: 'https://heyjoe.io/wp-content/uploads/2019/07/Non-Union-GameStop-Callback-sizecards_page-0065.jpg',\n    thumbnail: 'https://via.placeholder.com/150x100',\n    title: 'Title C',\n    description: `Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.`\n  }, {\n    id: 4,\n    category: 'Yes',\n    imageUrl: 'https://heyjoe.io/wp-content/uploads/2019/07/Non-Union-GameStop-Callback-sizecards_page-0064.jpg',\n    thumbnail: 'https://via.placeholder.com/150x100',\n    title: 'Title D',\n    description: `There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.`\n  }, {\n    id: 5,\n    category: 'Maybe',\n    imageUrl: 'https://heyjoe.io/wp-content/uploads/2019/07/Non-Union-GameStop-Callback-sizecards_page-0063.jpg',\n    thumbnail: 'https://via.placeholder.com/150x100',\n    title: 'Title E',\n    description: `The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.`\n  }, {\n    id: 6,\n    category: 'No',\n    imageUrl: 'https://heyjoe.io/wp-content/uploads/2019/07/Non-Union-GameStop-Callback-sizecards_page-0062.jpg',\n    thumbnail: 'https://via.placeholder.com/150x100',\n    title: 'Title F',\n    description: `\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"`\n  }\n];\n\nexport default class extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      displayedCategories: PHOTODATA,\n      active: false,\n      photoIndex: 0,\n      isOpen: false,\n      isListView: false\n    }\n  }\n\n  getInitialState() {\n    return {\n      displayedCategories: PHOTODATA,\n      active: false\n    };\n  }\n\n  toggleActive = () => {\n    this.setState({\n      active: !this.state.active\n    });\n  }\n\n  selectCategory = (element) => {\n    var categoryName = element.toLowerCase();\n    var displayedCategories = PHOTODATA.filter(function (el) {\n      var searchValue = el.category.toLowerCase();\n      return searchValue.indexOf(categoryName) !== -1;\n    });\n\n    this.setState({\n      displayedCategories: displayedCategories\n    });\n  }\n\n  resetFilter = (element) => {\n    this.setState({\n      displayedCategories: PHOTODATA\n    });\n  }\n\n  openLightBox = (photoIndex) => {\n    this.setState({ isOpen: true, photoIndex: photoIndex })\n  }\n\n  handleListViewChecked = () => {\n    this.setState({ isListView: !this.state.isListView })\n  }\n\n  ratePhoto = (rate) => {\n    let displayedCategories = JSON.parse(JSON.stringify(this.state.displayedCategories));\n    displayedCategories[this.state.photoIndex].category = rate;\n    this.setState({ rate: rate, displayedCategories: JSON.parse(JSON.stringify(displayedCategories)) });\n  }\n\n  render() {\n    const { photoIndex, isOpen } = this.state;\n    const images = this.state.displayedCategories;\n    const self = this\n    var categoryToSelect = this.selectCategory;\n    var getUniqueCategories = [];\n    PHOTODATA.forEach(function (el) {\n      if (getUniqueCategories.indexOf(el.category) === -1) getUniqueCategories.push(el.category);\n    })\n\n    return (\n      <Fragment>\n        <Header />\n        <main role=\"main\">\n          <section className=\"jumbotron text-center mb-0\">\n            <div className=\"container\">\n              <h1 className=\"jumbotron-heading\">Album ratings</h1>\n              <p className=\"lead text-muted\">Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer\n                took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries,\n                but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s\n                with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing\n                software like Aldus PageMaker including versions of Lorem Ipsum.\n              </p>\n              <div className=\"btn-group\" role=\"group\">\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.resetFilter}> All </button>\n                {\n                  getUniqueCategories.map(function (el, i) {\n                    var boundClick = categoryToSelect.bind(null, el);\n                    return <button type=\"button\" className=\"btn btn-secondary\" onClick={boundClick} category={el} key={i}>{el}</button>\n                  })\n                }\n              </div>\n            </div>\n          </section>\n          <div className=\"pb-5 pt-5 bg-light\">\n            <div className=\"container\">\n              <div className=\"text-right\">\n                <div className=\"custom-control custom-switch mb-4\">\n                  <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" onChange={this.handleListViewChecked} />\n                  <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">List View</label>\n                </div>\n              </div>\n              <div className=\"row\">\n                {\n                  !this.state.isListView && this.state.displayedCategories.map(function (el, i) {\n                    return <Photo key={el.id} imageUrl={el.imageUrl} category={el.category} title={el.title} onClick={self.openLightBox.bind(null, i)} description={el.description} />\n                  })\n                }\n                {\n                  this.state.isListView && this.state.displayedCategories.map(function (el, i) {\n                    return <PhotoListItem key={el.id} imageUrl={el.imageUrl} category={el.category} title={el.title} onClick={self.openLightBox.bind(null, i)} description={el.description} />\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </main>\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex].imageUrl}\n            nextSrc={images[(photoIndex + 1) % images.length].imageUrl}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length].imageUrl}\n            onRateClick={this.ratePhoto}\n            onCloseRequest={() => this.setState({ isOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length,\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length,\n              })\n            }\n          >\n            <button>sdfsadf</button>\n          </Lightbox>\n        )}\n      </Fragment>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * Placeholder for future translate functionality\n */\nexport function translate(str, replaceStrings = null) {\n  if (!str) {\n    return '';\n  }\n\n  let translated = str;\n  if (replaceStrings) {\n    Object.keys(replaceStrings).forEach(placeholder => {\n      translated = translated.replace(placeholder, replaceStrings[placeholder]);\n    });\n  }\n\n  return translated;\n}\n\nexport function getWindowWidth() {\n  return typeof global.window !== 'undefined' ? global.window.innerWidth : 0;\n}\n\nexport function getWindowHeight() {\n  return typeof global.window !== 'undefined' ? global.window.innerHeight : 0;\n}\n\n// Get the highest window context that isn't cross-origin\n// (When in an iframe)\nexport function getHighestSafeWindowContext(self = global.window.self) {\n  const { referrer } = self.document;\n  // If we reached the top level, return self\n  if (self === global.window.top || !referrer) {\n    return self;\n  }\n\n  const getOrigin = href => href.match(/(.*\\/\\/.*?)(\\/|$)/)[1];\n\n  // If parent is the same origin, we can move up one context\n  // Reference: https://stackoverflow.com/a/21965342/1601953\n  if (getOrigin(self.location.href) === getOrigin(referrer)) {\n    return getHighestSafeWindowContext(self.parent);\n  }\n\n  // If a different origin, we consider the current level\n  // as the top reachable one\n  return self;\n}\n"],"sourceRoot":""}